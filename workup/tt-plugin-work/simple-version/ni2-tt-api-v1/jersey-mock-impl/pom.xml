<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

   <modelVersion>4.0.0</modelVersion>

   <groupId>org.opennms.integration.ni2.ttapi</groupId>
   <artifactId>ni2-tt-api-v1-mock-impl</artifactId>
   <packaging>war</packaging>
   <version>0.0.1-SNAPSHOT</version>
   <name>ni2-tt-api-v1-mock-impl</name>

   <properties>
      <!-- general build properties -->
      <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
      <java.version>11</java.version>
      <jersey.version>3.1.7</jersey.version>
      <jetty.version>11.0.20</jetty.version>

      <slf4jVersion>1.7.36</slf4jVersion>
      <log4j2Version>2.21.1</log4j2Version>

      <!-- needed 2.12.2 instead of 2.14.1 -->
      <jackson.version>2.14.1</jackson.version>

      <!-- maven plugins and plugin dependencies -->
      <surefire.mvn.plugin.version>3.2.5</surefire.mvn.plugin.version>
      <war.mvn.plugin.version>3.4.0</war.mvn.plugin.version>
   </properties>

   <dependencyManagement>
      <dependencies>
         <dependency>
            <groupId>org.glassfish.jersey</groupId>
            <artifactId>jersey-bom</artifactId>
            <version>${jersey.version}</version>
            <type>pom</type>
            <scope>import</scope>
         </dependency>
      </dependencies>
   </dependencyManagement>

   <dependencies>

      <dependency>
         <groupId>org.opennms.integration.ni2.ttapi</groupId>
         <artifactId>ni2-tt-api-v1-model</artifactId>
         <version>${project.version}</version>
         <scope>compile</scope>
      </dependency>

      <dependency>
         <groupId>org.glassfish.jersey.containers</groupId>
         <artifactId>jersey-container-servlet</artifactId>
      </dependency>
      <dependency>
         <groupId>org.glassfish.jersey.inject</groupId>
         <artifactId>jersey-hk2</artifactId>
      </dependency>

      <!-- uncomment this to get JSON support -->
      <!-- <dependency> -->
      <!-- <groupId>org.glassfish.jersey.media</groupId> -->
      <!-- <artifactId>jersey-media-json-binding</artifactId> -->
      <!-- </dependency> -->


      <!-- add jackson as json provider -->
      <dependency>
         <groupId>org.glassfish.jersey.media</groupId>
         <artifactId>jersey-media-json-jackson</artifactId>
      </dependency>


      <!-- these are needed to make project build with jaxkson but jaxb is not used -->
      <!-- see https://mkyong.com/java/java-lang-noclassdeffounderror-javax-xml-bind-jaxbexception/ java.lang.NoClassDefFoundError: javax/xml/bind/JAXBException -->
      <!-- JAXB API only -->
      <!-- <dependency> -->
      <!-- <groupId>jakarta.xml.bind</groupId> -->
      <!-- <artifactId>jakarta.xml.bind-api</artifactId> -->
      <!-- <version>3.0.0</version> -->
      <!-- </dependency> -->

      <!-- JAXB RI, Jakarta XML Binding -->
      <!-- <dependency> -->
      <!-- <groupId>com.sun.xml.bind</groupId> -->
      <!-- <artifactId>jaxb-impl</artifactId> -->
      <!-- <version>3.0.0</version> -->
      <!-- <scope>runtime</scope> -->
      <!-- </dependency> -->


      <dependency>
         <groupId>org.eclipse.jetty</groupId>
         <artifactId>jetty-servlet</artifactId>
         <version>${jetty.version}</version>
         <scope>provided</scope>
      </dependency>
      <dependency>
         <groupId>org.eclipse.jetty</groupId>
         <artifactId>jetty-webapp</artifactId>
         <version>${jetty.version}</version>
         <scope>provided</scope>
      </dependency>

      <dependency>
         <groupId>org.glassfish.jersey.test-framework.providers</groupId>
         <artifactId>jersey-test-framework-provider-bundle</artifactId>
         <type>pom</type>
         <scope>test</scope>
      </dependency>

      <dependency>
         <groupId>org.junit.vintage</groupId>
         <artifactId>junit-vintage-engine</artifactId>
         <version>5.10.2</version>
         <scope>test</scope>
      </dependency>

      <dependency>
         <groupId>org.apache.logging.log4j</groupId>
         <artifactId>log4j-slf4j-impl</artifactId>
         <version>${log4j2Version}</version>
         <scope>test</scope>
      </dependency>

   </dependencies>

   <build>
      <finalName>${artifactId}</finalName>
      <plugins>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>3.8.1</version>
            <inherited>true</inherited>
            <configuration>
               <source>11</source>
               <target>11</target>
            </configuration>
         </plugin>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <version>2.8</version>
            <executions>
               <execution>
                  <id>copy-dependencies</id>
                  <phase>package</phase>
                  <goals>
                     <goal>copy-dependencies</goal>
                  </goals>
                  <configuration>
                     <includeScope>compile</includeScope>
                  </configuration>
               </execution>
            </executions>
         </plugin>


         <plugin>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-maven-plugin</artifactId>
            <version>${jetty.version}</version>
            <configuration>
               <contextPath>/</contextPath>
               <webApp>
                  <contextPath>/</contextPath>
                  <webInfIncludeJarPattern>.*/.*jersey-[^/]\.jar$</webInfIncludeJarPattern>
               </webApp>
               <war>${project.build.directory}/${project.build.finalName}.war</war>
            </configuration>
            <dependencies>
               <!-- mvn -X jetty:run produces logs without these depencencies -->
               <!-- <dependency> -->
               <!-- <groupId>org.apache.logging.log4j</groupId> -->
               <!-- <artifactId>log4j-slf4j-impl</artifactId> -->
               <!-- <version>${log4j2Version}</version> -->
               <!-- </dependency> -->
               <!-- <dependency> -->
               <!-- <groupId>org.apache.logging.log4j</groupId> -->
               <!-- <artifactId>log4j-slf4j18-impl</artifactId> -->
               <!-- <version>2.13.3</version> -->
               <!-- <scope>runtime</scope> -->
               <!-- </dependency> -->
            </dependencies>
         </plugin>
         <plugin>
            <!-- Surefire support for JUnit-5 -->
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>3.2.5</version>
         </plugin>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-war-plugin</artifactId>
            <version>3.4.0</version>
         </plugin>
      </plugins>
   </build>


</project>
